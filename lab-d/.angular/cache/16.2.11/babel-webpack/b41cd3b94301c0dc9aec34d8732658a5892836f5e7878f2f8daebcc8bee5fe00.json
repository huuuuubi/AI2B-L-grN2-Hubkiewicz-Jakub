{"ast":null,"code":"import { forkJoin } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../tasks.service\";\nexport class TasksComponent {\n  constructor(tasksService) {\n    this.tasksService = tasksService;\n    this.tasks = [];\n    this.newTask = {};\n    this.isProcessing = false;\n  }\n  ngOnInit() {\n    this.tasksService.index().subscribe(tasks => {\n      this.tasks = tasks;\n    });\n    this.isProcessing = false;\n  }\n  addTask() {\n    if (this.newTask.title === undefined) {\n      return;\n    }\n    this.newTask.completed = false;\n    this.newTask.archived = false;\n    this.tasks.unshift(this.newTask); // optimistic update; try commenting this line off and compare the difference\n    this.tasksService.post(this.newTask).subscribe(task => {\n      this.newTask = {};\n      this.ngOnInit();\n    });\n  }\n  handleChange(task) {\n    this.tasksService.put(task).subscribe({\n      error: err => {\n        alert(err);\n        this.ngOnInit();\n      }\n    });\n  }\n  archiveCompleted() {\n    const observables = [];\n    for (const task of this.tasks) {\n      if (!task.completed) {\n        continue;\n      }\n      task.archived = true;\n      observables.push(this.tasksService.put(task));\n    }\n    // refresh page when all updates finished\n    forkJoin(observables).subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n  static #_ = this.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 2,\n    vars: 0,\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"tasks works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["forkJoin","TasksComponent","constructor","tasksService","tasks","newTask","isProcessing","ngOnInit","index","subscribe","addTask","title","undefined","completed","archived","unshift","post","task","handleChange","put","error","err","alert","archiveCompleted","observables","push","_","i0","ɵɵdirectiveInject","i1","TasksService","_2","selectors","decls","vars","template","TasksComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\GIT\\AI2B-L-grN2-Hubkiewicz-Jakub\\lab-d\\src\\app\\tasks\\tasks.component.ts","D:\\GIT\\AI2B-L-grN2-Hubkiewicz-Jakub\\lab-d\\src\\app\\tasks\\tasks.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {TasksService} from \"../tasks.service\";\nimport {Task} from \"../task\";\nimport {forkJoin, Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  public tasks: Task[] = [];\n  public newTask: Task = {};\n  public isProcessing = false;\n\n  constructor(\n    private tasksService: TasksService\n  ) {\n  }\n\n  ngOnInit() {\n    this.tasksService.index().subscribe((tasks) => {\n      this.tasks = tasks;\n    });\n    this.isProcessing = false;\n  }\n\n  addTask() {\n    if (this.newTask.title === undefined) {\n      return;\n    }\n\n    this.newTask.completed = false;\n    this.newTask.archived = false;\n\n    this.tasks.unshift(this.newTask); // optimistic update; try commenting this line off and compare the difference\n\n    this.tasksService.post(this.newTask).subscribe((task) => {\n      this.newTask = {};\n      this.ngOnInit();\n    });\n  }\n\n  handleChange(task: Task) {\n    this.tasksService.put(task).subscribe({\n      error: err => {\n        alert(err);\n        this.ngOnInit();\n      }\n    });\n  }\n\n  archiveCompleted() {\n    const observables: Observable<any>[] = [];\n    for (const task of this.tasks) {\n      if (!task.completed) {\n        continue;\n      }\n\n      task.archived = true;\n      observables.push(this.tasksService.put(task));\n    }\n\n    // refresh page when all updates finished\n    forkJoin(observables).subscribe(() => {\n      this.ngOnInit();\n    });\n  }\n}\n","<p>tasks works!</p>\n"],"mappings":"AAGA,SAAQA,QAAQ,QAAmB,MAAM;;;AAOzC,OAAM,MAAOC,cAAc;EAKzBC,YACUC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IALf,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAS,EAAE;IAClB,KAAAC,YAAY,GAAG,KAAK;EAK3B;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,YAAY,CAACK,KAAK,EAAE,CAACC,SAAS,CAAEL,KAAK,IAAI;MAC5C,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;IACF,IAAI,CAACE,YAAY,GAAG,KAAK;EAC3B;EAEAI,OAAOA,CAAA;IACL,IAAI,IAAI,CAACL,OAAO,CAACM,KAAK,KAAKC,SAAS,EAAE;MACpC;;IAGF,IAAI,CAACP,OAAO,CAACQ,SAAS,GAAG,KAAK;IAC9B,IAAI,CAACR,OAAO,CAACS,QAAQ,GAAG,KAAK;IAE7B,IAAI,CAACV,KAAK,CAACW,OAAO,CAAC,IAAI,CAACV,OAAO,CAAC,CAAC,CAAC;IAElC,IAAI,CAACF,YAAY,CAACa,IAAI,CAAC,IAAI,CAACX,OAAO,CAAC,CAACI,SAAS,CAAEQ,IAAI,IAAI;MACtD,IAAI,CAACZ,OAAO,GAAG,EAAE;MACjB,IAAI,CAACE,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAW,YAAYA,CAACD,IAAU;IACrB,IAAI,CAACd,YAAY,CAACgB,GAAG,CAACF,IAAI,CAAC,CAACR,SAAS,CAAC;MACpCW,KAAK,EAAEC,GAAG,IAAG;QACXC,KAAK,CAACD,GAAG,CAAC;QACV,IAAI,CAACd,QAAQ,EAAE;MACjB;KACD,CAAC;EACJ;EAEAgB,gBAAgBA,CAAA;IACd,MAAMC,WAAW,GAAsB,EAAE;IACzC,KAAK,MAAMP,IAAI,IAAI,IAAI,CAACb,KAAK,EAAE;MAC7B,IAAI,CAACa,IAAI,CAACJ,SAAS,EAAE;QACnB;;MAGFI,IAAI,CAACH,QAAQ,GAAG,IAAI;MACpBU,WAAW,CAACC,IAAI,CAAC,IAAI,CAACtB,YAAY,CAACgB,GAAG,CAACF,IAAI,CAAC,CAAC;;IAG/C;IACAjB,QAAQ,CAACwB,WAAW,CAAC,CAACf,SAAS,CAAC,MAAK;MACnC,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;EAAC,QAAAmB,CAAA,G;qBAzDUzB,cAAc,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd9B,cAAc;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}